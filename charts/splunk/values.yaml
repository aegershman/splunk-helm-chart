replicaCount: 3

image:
  repository: splunk/splunk
  tag: 7.0.3-monitor
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  httpBindPort: 8000
  s2sBindPort: 9997
  hecBindPort: 8088
  syslogBindPort: 5514
  ##
  ## annotations:
  ##   service.beta.kubernetes.io/aws-load-balancer-internal: 0.0.0.0/0
  ##   service.beta.kubernetes.io/azure-load-balancer-internal: "true"
  ##   service.beta.kubernetes.io/azure-load-balancer-internal-subnet: "sandbox-infra-subnet"
  ##
  annotations: {}

##
## When using an ingress, you don't specify the port
## that's used for HEC. It's assumed :443 is used for both
## the UI and HEC. These are the paths under any "host" value
## that will route to the HEC.
##
## For example, given "ingress.hosts: [splunk.example.com]",
## then the UI will be at https://splunk.example.com, and the
## HEC endpoints will be at https://splunk.example.com/services/collector/...
##
## If you *aren't* using an ingress and are using a service: LoadBalancer,
## then you still have to specify the port,
## e.g. "https://loadbalanacerip:8088/services/..."
##
## It's *sort of* like the setup used by Splunk Cloud
## https://docs.splunk.com/Documentation/SplunkCloud/7.2.7/Data/Senddata
##
## Generally we assume ingress is handling TLS termination, so TLS should
## be disabled on the HEC, etc... Or I guess you could have the ingress do
## TLS passthrough if you wanted to configure certificates on the
## Splunk server directly. You do you.
##
ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - splunk.127.0.0.1.xip.io

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - splunk.127.0.0.1.xip.io

  ##
  ## https://docs.splunk.com/Documentation/Splunk/7.3.2/Data/HECRESTendpoints
  ##
  ## There's probably no reason to change these, but if you want
  ## to add more paths, in your values.yaml you'll likely need to include
  ## the paths defined in this default
  ##
  hec:
    paths:
    - /services/collector
    - /services/collector/event
    - /services/collector/raw

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

## Affinity and anti-affinity on web deployment.
## By default, this will best-effort schedule the pods on different hosts
##
affinity: # {}
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app
                operator: In
                values:
                  - splunk
          topologyKey: "kubernetes.io/hostname"

globalToken: 00000000-0000-0000-0000-000000000000

adminPassword: changemePlease

conf:
  ## You can include any kind of *.conf file when overriding
  # indexes.conf: |
  #   [exampleIndex]
  #   homePath = $SPLUNK_DB/exampleIndex/db
  #   coldPath = $SPLUNK_DB/exampleIndex/colddb
  #   thawedPath = $SPLUNK_DB/exampleIndex/thaweddb
  # outputs.conf: |
  #   [some-example]
  #   example one two three
