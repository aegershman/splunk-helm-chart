{{- if .Values.ingress.enabled -}}
{{- $fullName := include "splunk.fullname" . -}}
{{- if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
{{ include "splunk.labels" . | indent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
{{- if .Values.ingress.tls }}
  tls:
  {{- range .Values.ingress.tls }}
    - hosts:
      {{- range .hosts }}
        - {{ . | quote }}
      {{- end }}
      secretName: {{ .secretName }}
  {{- end }}
{{- end }}
  rules:
  {{- range .Values.ingress.hosts }}
    - host: {{ . | quote }}
      http:
        paths:
          - path: /
            backend:
              serviceName: {{ $fullName }}
              servicePort: {{ $.Values.service.httpBindPort }}
          ## TODO
          ## HEC pathways
          ## better way to configure these...?
          ## Still don't fully understand why splunk has them under different port routes
          ## https://docs.splunk.com/Documentation/SplunkCloud/7.2.7/Data/Senddata
          ##
          ## Generally we assume Ingress is handling TLS termination, so TLS should
          ## be disabled on HEC... Or I guess you could do TLS passthrough if you
          ## wanted to configure the certs on the splunk server directly
          ## you do you, you know?
          - path: /services/collector
            backend:
              serviceName: {{ $fullName }}
              servicePort: {{ $.Values.service.hecBindPort }}
          - path: /services/collector/event
            backend:
              serviceName: {{ $fullName }}
              servicePort: {{ $.Values.service.hecBindPort }}
          - path: /services/collector/raw
            backend:
              serviceName: {{ $fullName }}
              servicePort: {{ $.Values.service.hecBindPort }}
  {{- end }}
{{- end }}
